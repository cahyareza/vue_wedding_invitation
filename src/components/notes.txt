onMounted(() => {
    fetch(' http://localhost:3000/couples')
    .then(response => response.json())
    .then(data => {
        state.couples = data
    });
});

<script>
import { inject, computed } from 'vue'

export default {
    name: 'GroomBride',
    setup() {
        const store = inject('store');

        const couples = computed(() => store.state.couples); 

        store.actions.getCouples();

        return {
            couples
        };
    }
}
</script>


import { ref } from 'vue'
const countdown = ref(null)


// Handler for countdown
const createTimer = (target, container, cb) => {
   // target => UNIX time target
   // Container => variable for return result
   // cb => callback if countdown finish
   const now = new Date().getTime()
   const distance = target - now
   if ( distance > 0 ) {
     const hari = Math.floor(distance / (1000 * 60 * 60 * 24));
     const jam = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
     const menit = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
     const detik = Math.floor((distance % (1000 * 60)) / 1000);
      
     container.value = { hari, jam, menit, detik }
     //alert(JSON.stringify(container))
      
     if (hari === 0 && jam === 0 && menit === 0 && detik === 0 ) cb()
   } else {
     container.value = { hari: 0, jam: 0, menit: 0, detik: 0 }
   } 
}
const timer = setInterval(() => {
  createTimer(new Date('2022-10-8 19:30').getTime(), countdown, () => {
    clearInterval(timer)
  }),
  console.log(countdown.value);
}, 1000)





import useTimer from "../../../hooks/useTimer";
import { inject, computed } from 'vue'

const store = inject('store');
// console.log(store);

const acara = computed(() => store.state.acara); 

store.actions.getAcara();
// console.log(acara.value);

// import hooks method
const { createTimer, countdown } = useTimer();

createTimer;

const timer = setInterval(() => {new Date("2022-07-8 19:30").getTime(), 
  countdown, 
  () => {
    clearInterval(timer)
  }}, 
  1000);


  <template>
  <div class="atcb">
    {
        "name":"Reminder to star the add-to-calendar-button repo",
        "description":"Check out the maybe easiest way to include add-to-calendar-buttons to your website:\nâ†’ [url]https://github.com/jekuer/add-to-calendar-button|Click here![/url]",
        "startDate":"2022-08-14",
        "location":"World Wide Web",
        "label":"Simpan ke kalender!",
        "startTime":"10:13",
        "endTime":"12:57",
        "options":[
            "Google",
            "Apple",
            "iCal",
            "Yahoo",
            "Outlook.com",
            "Microsoft365"
        ],
        "timeZone":"Asia/Jakarta",
        "trigger":"click",
        "iCalFileName":"Reminder-Event"
    }
  </div>
</template>

<script setup>
import { onMounted } from "vue";
import { atcb_init } from 'add-to-calendar-button';
import 'add-to-calendar-button/assets/css/atcb.css';
import { inject } from 'vue';

const store = inject('store');

// const addtocalender = computed(() => store.state.addtocalender);

store.actions.getAddtocalender();

onMounted(() => {
  atcb_init();
})

</script>


onMounted(() => {

    axios
        .get("http://localhost:3000/hadir")
        .then((response) => setHadir(response.data))
        .catch((error) => console.log(error));
})



const default_button = ref(null)

onMounted(async () => {
    await store.actions.getAddtocalender();
    // console.log(addtocalender);
    const rawaddtocalender = toRaw(addtocalender.value);

 
    const config = rawaddtocalender
    const button = default_button.value
    button.addEventListener('click', () => atcb_action(config, button));
})